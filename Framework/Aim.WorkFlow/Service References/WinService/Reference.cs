//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4016
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aim.WorkFlow.WinService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetaData_EForm", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.EDM", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class MetaData_EForm : Aim.WorkFlow.WinService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Aim.WorkFlow.WinService.Mapping_EFormAndWorkflowTemplate[] Mapping_EFormAndWorkflowTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedTime {
            get {
                return this.CreatedTimeField;
            }
            set {
                if ((this.CreatedTimeField.Equals(value) != true)) {
                    this.CreatedTimeField = value;
                    this.RaisePropertyChanged("CreatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyName {
            get {
                return this.KeyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyNameField, value) != true)) {
                    this.KeyNameField = value;
                    this.RaisePropertyChanged("KeyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Aim.WorkFlow.WinService.Mapping_EFormAndWorkflowTemplate[] Mapping_EFormAndWorkflowTemplate {
            get {
                return this.Mapping_EFormAndWorkflowTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.Mapping_EFormAndWorkflowTemplateField, value) != true)) {
                    this.Mapping_EFormAndWorkflowTemplateField = value;
                    this.RaisePropertyChanged("Mapping_EFormAndWorkflowTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedTime {
            get {
                return this.UpdatedTimeField;
            }
            set {
                if ((this.UpdatedTimeField.Equals(value) != true)) {
                    this.UpdatedTimeField = value;
                    this.RaisePropertyChanged("UpdatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.Mapping_EFormAndWorkflowTemplate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.WorkflowTemplate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.Task))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ReceivedDocument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.MetaData_EForm))]
    public partial class StructuralObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.Mapping_EFormAndWorkflowTemplate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.WorkflowTemplate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.Task))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ReceivedDocument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.MetaData_EForm))]
    public partial class EntityObject : Aim.WorkFlow.WinService.StructuralObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Aim.WorkFlow.WinService.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Aim.WorkFlow.WinService.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mapping_EFormAndWorkflowTemplate", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.EDM", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Mapping_EFormAndWorkflowTemplate : Aim.WorkFlow.WinService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EFormIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Aim.WorkFlow.WinService.MetaData_EForm MetaData_EFormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Aim.WorkFlow.WinService.EntityReferenceOfMetaData_EForm1hA_PQjbb MetaData_EFormReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkflowTemplateNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EFormID {
            get {
                return this.EFormIDField;
            }
            set {
                if ((this.EFormIDField.Equals(value) != true)) {
                    this.EFormIDField = value;
                    this.RaisePropertyChanged("EFormID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Aim.WorkFlow.WinService.MetaData_EForm MetaData_EForm {
            get {
                return this.MetaData_EFormField;
            }
            set {
                if ((object.ReferenceEquals(this.MetaData_EFormField, value) != true)) {
                    this.MetaData_EFormField = value;
                    this.RaisePropertyChanged("MetaData_EForm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Aim.WorkFlow.WinService.EntityReferenceOfMetaData_EForm1hA_PQjbb MetaData_EFormReference {
            get {
                return this.MetaData_EFormReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.MetaData_EFormReferenceField, value) != true)) {
                    this.MetaData_EFormReferenceField = value;
                    this.RaisePropertyChanged("MetaData_EFormReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowTemplateName {
            get {
                return this.WorkflowTemplateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowTemplateNameField, value) != true)) {
                    this.WorkflowTemplateNameField = value;
                    this.RaisePropertyChanged("WorkflowTemplateName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowTemplate", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.EDM", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class WorkflowTemplate : Aim.WorkFlow.WinService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastReviserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XAMLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Config {
            get {
                return this.ConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigField, value) != true)) {
                    this.ConfigField = value;
                    this.RaisePropertyChanged("Config");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastReviser {
            get {
                return this.LastReviserField;
            }
            set {
                if ((object.ReferenceEquals(this.LastReviserField, value) != true)) {
                    this.LastReviserField = value;
                    this.RaisePropertyChanged("LastReviser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateName {
            get {
                return this.TemplateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateNameField, value) != true)) {
                    this.TemplateNameField = value;
                    this.RaisePropertyChanged("TemplateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XAML {
            get {
                return this.XAMLField;
            }
            set {
                if ((object.ReferenceEquals(this.XAMLField, value) != true)) {
                    this.XAMLField = value;
                    this.RaisePropertyChanged("XAML");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.EDM", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Task : Aim.WorkFlow.WinService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApprovalNodeMatchConditionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovalNodeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookmarkNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EFormNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinishTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Aim.WorkFlow.WinService.TaskContext TaskContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkFlowNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkflowInstanceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApprovalNodeMatchConditionType {
            get {
                return this.ApprovalNodeMatchConditionTypeField;
            }
            set {
                if ((this.ApprovalNodeMatchConditionTypeField.Equals(value) != true)) {
                    this.ApprovalNodeMatchConditionTypeField = value;
                    this.RaisePropertyChanged("ApprovalNodeMatchConditionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovalNodeName {
            get {
                return this.ApprovalNodeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalNodeNameField, value) != true)) {
                    this.ApprovalNodeNameField = value;
                    this.RaisePropertyChanged("ApprovalNodeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookmarkName {
            get {
                return this.BookmarkNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BookmarkNameField, value) != true)) {
                    this.BookmarkNameField = value;
                    this.RaisePropertyChanged("BookmarkName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedTime {
            get {
                return this.CreatedTimeField;
            }
            set {
                if ((this.CreatedTimeField.Equals(value) != true)) {
                    this.CreatedTimeField = value;
                    this.RaisePropertyChanged("CreatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EFormName {
            get {
                return this.EFormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EFormNameField, value) != true)) {
                    this.EFormNameField = value;
                    this.RaisePropertyChanged("EFormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FinishTime {
            get {
                return this.FinishTimeField;
            }
            set {
                if ((this.FinishTimeField.Equals(value) != true)) {
                    this.FinishTimeField = value;
                    this.RaisePropertyChanged("FinishTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerIdField, value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Aim.WorkFlow.WinService.TaskContext TaskContext {
            get {
                return this.TaskContextField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskContextField, value) != true)) {
                    this.TaskContextField = value;
                    this.RaisePropertyChanged("TaskContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedTime {
            get {
                return this.UpdatedTimeField;
            }
            set {
                if ((this.UpdatedTimeField.Equals(value) != true)) {
                    this.UpdatedTimeField = value;
                    this.RaisePropertyChanged("UpdatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkFlowName {
            get {
                return this.WorkFlowNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkFlowNameField, value) != true)) {
                    this.WorkFlowNameField = value;
                    this.RaisePropertyChanged("WorkFlowName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowInstanceID {
            get {
                return this.WorkflowInstanceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowInstanceIDField, value) != true)) {
                    this.WorkflowInstanceIDField = value;
                    this.RaisePropertyChanged("WorkflowInstanceID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceivedDocument", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.EDM", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ReceivedDocument : Aim.WorkFlow.WinService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class EntityKey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityContainerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Aim.WorkFlow.WinService.EntityKeyMember[] EntityKeyValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntitySetNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Aim.WorkFlow.WinService.EntityKeyMember[] EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityReferenceOfMetaData_EForm1hA_PQjbb))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.RelatedEnd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalNodeSkipInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalNodeSkipInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.KeyValuePair_V2[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.KeyValuePair_V2))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalOpinion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalNodeContext[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalNodeContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalUnitContext[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalUnitContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.Approver))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApproverValueType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalNodeMatchConditionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApproverMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.HumanWorkflowContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.SwitchRulePolicy))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.SwitchRule[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.SwitchRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.WorkItemStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.MetaData_EForm[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.MetaData_EForm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.Mapping_EFormAndWorkflowTemplate[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.Mapping_EFormAndWorkflowTemplate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.WorkflowTemplate[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.WorkflowTemplate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.Task))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.TaskContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.TaskContextSwitchRule[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.TaskContextSwitchRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.TaskContextSwitchRuleNextAction[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.TaskContextSwitchRuleNextAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.Task[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ReceivedDocument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, Aim.WorkFlow.WinService.ApprovalNodeContext>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityKeyMember[]))]
    public partial class EntityKeyMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfMetaData_EForm1hA_PQjbb", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfMetaData_EForm1hA_PQjbb : Aim.WorkFlow.WinService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReference", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityReferenceOfMetaData_EForm1hA_PQjbb))]
    public partial class EntityReference : Aim.WorkFlow.WinService.RelatedEnd {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Aim.WorkFlow.WinService.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Aim.WorkFlow.WinService.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelatedEnd", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityReferenceOfMetaData_EForm1hA_PQjbb))]
    public partial class RelatedEnd : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApprovalResult", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.Model")]
    [System.SerializableAttribute()]
    public partial class ApprovalResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime ApprovalDateTimeField;
        
        private Aim.WorkFlow.WinService.ApprovalNodeSkipInfo[] ApprovalNodeSkipInfoListField;
        
        private string CommentField;
        
        private Aim.WorkFlow.WinService.KeyValuePair_V2[] ExtendedPropertiesField;
        
        private Aim.WorkFlow.WinService.ApprovalOpinion OpinionField;
        
        private Aim.WorkFlow.WinService.ApprovalNodeContext[] SpecifiedApprovalNodeContextsField;
        
        private Aim.WorkFlow.WinService.KeyValuePair_V2[] SwitchRulesField;
        
        private Aim.WorkFlow.WinService.Task TaskField;
        
        private string TaskIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime ApprovalDateTime {
            get {
                return this.ApprovalDateTimeField;
            }
            set {
                if ((this.ApprovalDateTimeField.Equals(value) != true)) {
                    this.ApprovalDateTimeField = value;
                    this.RaisePropertyChanged("ApprovalDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.ApprovalNodeSkipInfo[] ApprovalNodeSkipInfoList {
            get {
                return this.ApprovalNodeSkipInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalNodeSkipInfoListField, value) != true)) {
                    this.ApprovalNodeSkipInfoListField = value;
                    this.RaisePropertyChanged("ApprovalNodeSkipInfoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.KeyValuePair_V2[] ExtendedProperties {
            get {
                return this.ExtendedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedPropertiesField, value) != true)) {
                    this.ExtendedPropertiesField = value;
                    this.RaisePropertyChanged("ExtendedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.ApprovalOpinion Opinion {
            get {
                return this.OpinionField;
            }
            set {
                if ((this.OpinionField.Equals(value) != true)) {
                    this.OpinionField = value;
                    this.RaisePropertyChanged("Opinion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.ApprovalNodeContext[] SpecifiedApprovalNodeContexts {
            get {
                return this.SpecifiedApprovalNodeContextsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedApprovalNodeContextsField, value) != true)) {
                    this.SpecifiedApprovalNodeContextsField = value;
                    this.RaisePropertyChanged("SpecifiedApprovalNodeContexts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.KeyValuePair_V2[] SwitchRules {
            get {
                return this.SwitchRulesField;
            }
            set {
                if ((object.ReferenceEquals(this.SwitchRulesField, value) != true)) {
                    this.SwitchRulesField = value;
                    this.RaisePropertyChanged("SwitchRules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.Task Task {
            get {
                return this.TaskField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskField, value) != true)) {
                    this.TaskField = value;
                    this.RaisePropertyChanged("Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskIdField, value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApprovalNodeSkipInfo", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.Model")]
    [System.SerializableAttribute()]
    public partial class ApprovalNodeSkipInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ApprovalNodeContextNameField;
        
        private bool CanBeSkippedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ApprovalNodeContextName {
            get {
                return this.ApprovalNodeContextNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalNodeContextNameField, value) != true)) {
                    this.ApprovalNodeContextNameField = value;
                    this.RaisePropertyChanged("ApprovalNodeContextName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool CanBeSkipped {
            get {
                return this.CanBeSkippedField;
            }
            set {
                if ((this.CanBeSkippedField.Equals(value) != true)) {
                    this.CanBeSkippedField = value;
                    this.RaisePropertyChanged("CanBeSkipped");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePair_V2", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityReferenceOfMetaData_EForm1hA_PQjbb))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.RelatedEnd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalNodeSkipInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalNodeSkipInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.KeyValuePair_V2[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalOpinion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalNodeContext[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalNodeContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalUnitContext[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalUnitContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.Approver))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApproverValueType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApprovalNodeMatchConditionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ApproverMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.HumanWorkflowContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.SwitchRulePolicy))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.SwitchRule[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.SwitchRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.WorkItemStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.MetaData_EForm[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.MetaData_EForm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.Mapping_EFormAndWorkflowTemplate[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.Mapping_EFormAndWorkflowTemplate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.WorkflowTemplate[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.WorkflowTemplate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.Task))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.TaskContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.TaskContextSwitchRule[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.TaskContextSwitchRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.TaskContextSwitchRuleNextAction[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.TaskContextSwitchRuleNextAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.Task[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.ReceivedDocument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, Aim.WorkFlow.WinService.ApprovalNodeContext>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityKeyMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Aim.WorkFlow.WinService.EntityKeyMember))]
    public partial class KeyValuePair_V2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string KeyField;
        
        private object ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApprovalOpinion", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.Model")]
    public enum ApprovalOpinion : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        拒绝 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        同意 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        签收确认 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        超时 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        系统取消 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NA = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApprovalNodeContext", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.Model")]
    [System.SerializableAttribute()]
    public partial class ApprovalNodeContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Aim.WorkFlow.WinService.ApprovalUnitContext[] ApprovalUnitContextsField;
        
        private bool CanBeSkippedField;
        
        private int CurrentApproverIndexField;
        
        private string DescriptionField;
        
        private string ExtDataField;
        
        private System.Guid IDField;
        
        private Aim.WorkFlow.WinService.ApprovalNodeMatchConditionType MatchConditionTypeField;
        
        private Aim.WorkFlow.WinService.ApproverMode ModeField;
        
        private string NameField;
        
        private Aim.WorkFlow.WinService.HumanWorkflowContext OwnerField;
        
        private string SwitchNodesField;
        
        private Aim.WorkFlow.WinService.SwitchRulePolicy SwitchRulePolicyField;
        
        private Aim.WorkFlow.WinService.SwitchRule[] SwitchRulesField;
        
        private System.Guid TaskGroupIDField;
        
        private System.TimeSpan _DelaySpanField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.ApprovalUnitContext[] ApprovalUnitContexts {
            get {
                return this.ApprovalUnitContextsField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalUnitContextsField, value) != true)) {
                    this.ApprovalUnitContextsField = value;
                    this.RaisePropertyChanged("ApprovalUnitContexts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool CanBeSkipped {
            get {
                return this.CanBeSkippedField;
            }
            set {
                if ((this.CanBeSkippedField.Equals(value) != true)) {
                    this.CanBeSkippedField = value;
                    this.RaisePropertyChanged("CanBeSkipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CurrentApproverIndex {
            get {
                return this.CurrentApproverIndexField;
            }
            set {
                if ((this.CurrentApproverIndexField.Equals(value) != true)) {
                    this.CurrentApproverIndexField = value;
                    this.RaisePropertyChanged("CurrentApproverIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ExtData {
            get {
                return this.ExtDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtDataField, value) != true)) {
                    this.ExtDataField = value;
                    this.RaisePropertyChanged("ExtData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.ApprovalNodeMatchConditionType MatchConditionType {
            get {
                return this.MatchConditionTypeField;
            }
            set {
                if ((this.MatchConditionTypeField.Equals(value) != true)) {
                    this.MatchConditionTypeField = value;
                    this.RaisePropertyChanged("MatchConditionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.ApproverMode Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((this.ModeField.Equals(value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.HumanWorkflowContext Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SwitchNodes {
            get {
                return this.SwitchNodesField;
            }
            set {
                if ((object.ReferenceEquals(this.SwitchNodesField, value) != true)) {
                    this.SwitchNodesField = value;
                    this.RaisePropertyChanged("SwitchNodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.SwitchRulePolicy SwitchRulePolicy {
            get {
                return this.SwitchRulePolicyField;
            }
            set {
                if ((this.SwitchRulePolicyField.Equals(value) != true)) {
                    this.SwitchRulePolicyField = value;
                    this.RaisePropertyChanged("SwitchRulePolicy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.SwitchRule[] SwitchRules {
            get {
                return this.SwitchRulesField;
            }
            set {
                if ((object.ReferenceEquals(this.SwitchRulesField, value) != true)) {
                    this.SwitchRulesField = value;
                    this.RaisePropertyChanged("SwitchRules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid TaskGroupID {
            get {
                return this.TaskGroupIDField;
            }
            set {
                if ((this.TaskGroupIDField.Equals(value) != true)) {
                    this.TaskGroupIDField = value;
                    this.RaisePropertyChanged("TaskGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.TimeSpan _DelaySpan {
            get {
                return this._DelaySpanField;
            }
            set {
                if ((this._DelaySpanField.Equals(value) != true)) {
                    this._DelaySpanField = value;
                    this.RaisePropertyChanged("_DelaySpan");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApprovalUnitContext", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.Model")]
    [System.SerializableAttribute()]
    public partial class ApprovalUnitContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Aim.WorkFlow.WinService.Approver ApproverField;
        
        private bool CanBeSkippedField;
        
        private Aim.WorkFlow.WinService.ApprovalNodeContext OwnerField;
        
        private Aim.WorkFlow.WinService.ApprovalResult ResultField;
        
        private string SkipConditionField;
        
        private System.Guid TaskIDField;
        
        private string _BookmarkNameField;
        
        private System.TimeSpan _DelaySpanField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.Approver Approver {
            get {
                return this.ApproverField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproverField, value) != true)) {
                    this.ApproverField = value;
                    this.RaisePropertyChanged("Approver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool CanBeSkipped {
            get {
                return this.CanBeSkippedField;
            }
            set {
                if ((this.CanBeSkippedField.Equals(value) != true)) {
                    this.CanBeSkippedField = value;
                    this.RaisePropertyChanged("CanBeSkipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.ApprovalNodeContext Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.ApprovalResult Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SkipCondition {
            get {
                return this.SkipConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.SkipConditionField, value) != true)) {
                    this.SkipConditionField = value;
                    this.RaisePropertyChanged("SkipCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid TaskID {
            get {
                return this.TaskIDField;
            }
            set {
                if ((this.TaskIDField.Equals(value) != true)) {
                    this.TaskIDField = value;
                    this.RaisePropertyChanged("TaskID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _BookmarkName {
            get {
                return this._BookmarkNameField;
            }
            set {
                if ((object.ReferenceEquals(this._BookmarkNameField, value) != true)) {
                    this._BookmarkNameField = value;
                    this.RaisePropertyChanged("_BookmarkName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.TimeSpan _DelaySpan {
            get {
                return this._DelaySpanField;
            }
            set {
                if ((this._DelaySpanField.Equals(value) != true)) {
                    this._DelaySpanField = value;
                    this.RaisePropertyChanged("_DelaySpan");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Approver", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.Model")]
    [System.SerializableAttribute()]
    public partial class Approver : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Aim.WorkFlow.WinService.ApproverValueType ValueTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeName {
            get {
                return this.NodeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeNameField, value) != true)) {
                    this.NodeNameField = value;
                    this.RaisePropertyChanged("NodeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Aim.WorkFlow.WinService.ApproverValueType ValueType {
            get {
                return this.ValueTypeField;
            }
            set {
                if ((this.ValueTypeField.Equals(value) != true)) {
                    this.ValueTypeField = value;
                    this.RaisePropertyChanged("ValueType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApproverValueType", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.Model")]
    public enum ApproverValueType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ADAccount = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VirtualRole = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepartmentAndRole = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApprovalNodeMatchConditionType", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.Model")]
    public enum ApprovalNodeMatchConditionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        必须全部同意 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        一个同意即可 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        有一个不同意则退出 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApproverMode", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.Model")]
    public enum ApproverMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        串行 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        并行 = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HumanWorkflowContext", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.Model")]
    [System.SerializableAttribute()]
    public partial class HumanWorkflowContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.Dictionary<string, Aim.WorkFlow.WinService.ApprovalNodeContext> ApprovalNodeContextsField;
        
        private string EFormEntitySetNameField;
        
        private System.Guid EFormIDField;
        
        private string EFormNameField;
        
        private System.Collections.Generic.Dictionary<string, object> ExtendedPropertiesField;
        
        private Aim.WorkFlow.WinService.KeyValuePair_V2[] SwitchRulesField;
        
        private System.Guid WorkflowInstanceIDField;
        
        private string WorkflowTemplateNameField;
        
        private string WorkflowTemplateVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, Aim.WorkFlow.WinService.ApprovalNodeContext> ApprovalNodeContexts {
            get {
                return this.ApprovalNodeContextsField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalNodeContextsField, value) != true)) {
                    this.ApprovalNodeContextsField = value;
                    this.RaisePropertyChanged("ApprovalNodeContexts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string EFormEntitySetName {
            get {
                return this.EFormEntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EFormEntitySetNameField, value) != true)) {
                    this.EFormEntitySetNameField = value;
                    this.RaisePropertyChanged("EFormEntitySetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid EFormID {
            get {
                return this.EFormIDField;
            }
            set {
                if ((this.EFormIDField.Equals(value) != true)) {
                    this.EFormIDField = value;
                    this.RaisePropertyChanged("EFormID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string EFormName {
            get {
                return this.EFormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EFormNameField, value) != true)) {
                    this.EFormNameField = value;
                    this.RaisePropertyChanged("EFormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, object> ExtendedProperties {
            get {
                return this.ExtendedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedPropertiesField, value) != true)) {
                    this.ExtendedPropertiesField = value;
                    this.RaisePropertyChanged("ExtendedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.KeyValuePair_V2[] SwitchRules {
            get {
                return this.SwitchRulesField;
            }
            set {
                if ((object.ReferenceEquals(this.SwitchRulesField, value) != true)) {
                    this.SwitchRulesField = value;
                    this.RaisePropertyChanged("SwitchRules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid WorkflowInstanceID {
            get {
                return this.WorkflowInstanceIDField;
            }
            set {
                if ((this.WorkflowInstanceIDField.Equals(value) != true)) {
                    this.WorkflowInstanceIDField = value;
                    this.RaisePropertyChanged("WorkflowInstanceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string WorkflowTemplateName {
            get {
                return this.WorkflowTemplateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowTemplateNameField, value) != true)) {
                    this.WorkflowTemplateNameField = value;
                    this.RaisePropertyChanged("WorkflowTemplateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string WorkflowTemplateVersion {
            get {
                return this.WorkflowTemplateVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowTemplateVersionField, value) != true)) {
                    this.WorkflowTemplateVersionField = value;
                    this.RaisePropertyChanged("WorkflowTemplateVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwitchRulePolicy", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.Model")]
    public enum SwitchRulePolicy : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NextNode = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disable = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserSpecified = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwitchRule", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.Model")]
    [System.SerializableAttribute()]
    public partial class SwitchRule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] NextActionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] NextActions {
            get {
                return this.NextActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.NextActionsField, value) != true)) {
                    this.NextActionsField = value;
                    this.RaisePropertyChanged("NextActions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeName {
            get {
                return this.NodeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeNameField, value) != true)) {
                    this.NodeNameField = value;
                    this.RaisePropertyChanged("NodeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkItemStatus", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.Activities")]
    public enum WorkItemStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Assigned = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeOut = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Terminated = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NA = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskContext", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.EDM")]
    [System.SerializableAttribute()]
    public partial class TaskContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Aim.WorkFlow.WinService.TaskContextSwitchRule[] switchRulesFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.TaskContextSwitchRule[] switchRulesField {
            get {
                return this.switchRulesFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.switchRulesFieldField, value) != true)) {
                    this.switchRulesFieldField = value;
                    this.RaisePropertyChanged("switchRulesField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskContextSwitchRule", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.EDM")]
    [System.SerializableAttribute()]
    public partial class TaskContextSwitchRule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Aim.WorkFlow.WinService.TaskContextSwitchRuleNextAction[] nextActionsFieldField;
        
        private string nodeNameFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Aim.WorkFlow.WinService.TaskContextSwitchRuleNextAction[] nextActionsField {
            get {
                return this.nextActionsFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.nextActionsFieldField, value) != true)) {
                    this.nextActionsFieldField = value;
                    this.RaisePropertyChanged("nextActionsField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string nodeNameField {
            get {
                return this.nodeNameFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.nodeNameFieldField, value) != true)) {
                    this.nodeNameFieldField = value;
                    this.RaisePropertyChanged("nodeNameField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskContextSwitchRuleNextAction", Namespace="http://schemas.datacontract.org/2004/07/BPM.WF.EDM")]
    [System.SerializableAttribute()]
    public partial class TaskContextSwitchRuleNextAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string nameFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string nameField {
            get {
                return this.nameFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.nameFieldField, value) != true)) {
                    this.nameFieldField = value;
                    this.RaisePropertyChanged("nameField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WinService.IFlowBus")]
    public interface IFlowBus {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowBus/GetAllEFormMetaDatas", ReplyAction="http://tempuri.org/IFlowBus/GetAllEFormMetaDatasResponse")]
        Aim.WorkFlow.WinService.MetaData_EForm[] GetAllEFormMetaDatas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowBus/GetAllWorkflowTemplates", ReplyAction="http://tempuri.org/IFlowBus/GetAllWorkflowTemplatesResponse")]
        Aim.WorkFlow.WinService.WorkflowTemplate[] GetAllWorkflowTemplates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowBus/GetEFormEntityByWorkflowInstanceID", ReplyAction="http://tempuri.org/IFlowBus/GetEFormEntityByWorkflowInstanceIDResponse")]
        Aim.WorkFlow.WinService.EntityObject GetEFormEntityByWorkflowInstanceID(System.Guid workflowInstanceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowBus/GetTaskByTaskId", ReplyAction="http://tempuri.org/IFlowBus/GetTaskByTaskIdResponse")]
        Aim.WorkFlow.WinService.Task GetTaskByTaskId(string taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowBus/GetTaskListByOwnerAndStatus", ReplyAction="http://tempuri.org/IFlowBus/GetTaskListByOwnerAndStatusResponse")]
        Aim.WorkFlow.WinService.Task[] GetTaskListByOwnerAndStatus(string owner, Aim.WorkFlow.WinService.WorkItemStatus workItemStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowBus/GetWorkflowTemplatesBindingToEForm", ReplyAction="http://tempuri.org/IFlowBus/GetWorkflowTemplatesBindingToEFormResponse")]
        Aim.WorkFlow.WinService.WorkflowTemplate[] GetWorkflowTemplatesBindingToEForm(System.Guid eFormID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowBus/StartFlow", ReplyAction="http://tempuri.org/IFlowBus/StartFlowResponse")]
        System.Guid StartFlow(System.Guid formInstanceId, string formUrl, string title, string workflowTemplateKey, string userId, string userNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowBus/SubmitApprovalResult", ReplyAction="http://tempuri.org/IFlowBus/SubmitApprovalResultResponse")]
        void SubmitApprovalResult(System.Guid workflowInstanceID, string bookmarkName, Aim.WorkFlow.WinService.ApprovalResult approvalResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowBus/SubmitNewEForm", ReplyAction="http://tempuri.org/IFlowBus/SubmitNewEFormResponse")]
        System.Guid SubmitNewEForm(Aim.WorkFlow.WinService.ReceivedDocument eFormEntity, System.Guid workflowTemplateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowBus/UpdateEFormWorkflowTemplateBinding", ReplyAction="http://tempuri.org/IFlowBus/UpdateEFormWorkflowTemplateBindingResponse")]
        void UpdateEFormWorkflowTemplateBinding(System.Guid eformTemplateID, string[] boundWorkflowTemplateNames);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IFlowBusChannel : Aim.WorkFlow.WinService.IFlowBus, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class FlowBusClient : System.ServiceModel.ClientBase<Aim.WorkFlow.WinService.IFlowBus>, Aim.WorkFlow.WinService.IFlowBus {
        
        public FlowBusClient() {
        }
        
        public FlowBusClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlowBusClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlowBusClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlowBusClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Aim.WorkFlow.WinService.MetaData_EForm[] GetAllEFormMetaDatas() {
            return base.Channel.GetAllEFormMetaDatas();
        }
        
        public Aim.WorkFlow.WinService.WorkflowTemplate[] GetAllWorkflowTemplates() {
            return base.Channel.GetAllWorkflowTemplates();
        }
        
        public Aim.WorkFlow.WinService.EntityObject GetEFormEntityByWorkflowInstanceID(System.Guid workflowInstanceID) {
            return base.Channel.GetEFormEntityByWorkflowInstanceID(workflowInstanceID);
        }
        
        public Aim.WorkFlow.WinService.Task GetTaskByTaskId(string taskId) {
            return base.Channel.GetTaskByTaskId(taskId);
        }
        
        public Aim.WorkFlow.WinService.Task[] GetTaskListByOwnerAndStatus(string owner, Aim.WorkFlow.WinService.WorkItemStatus workItemStatus) {
            return base.Channel.GetTaskListByOwnerAndStatus(owner, workItemStatus);
        }
        
        public Aim.WorkFlow.WinService.WorkflowTemplate[] GetWorkflowTemplatesBindingToEForm(System.Guid eFormID) {
            return base.Channel.GetWorkflowTemplatesBindingToEForm(eFormID);
        }
        
        public System.Guid StartFlow(System.Guid formInstanceId, string formUrl, string title, string workflowTemplateKey, string userId, string userNames) {
            return base.Channel.StartFlow(formInstanceId, formUrl, title, workflowTemplateKey, userId, userNames);
        }
        
        public void SubmitApprovalResult(System.Guid workflowInstanceID, string bookmarkName, Aim.WorkFlow.WinService.ApprovalResult approvalResult) {
            base.Channel.SubmitApprovalResult(workflowInstanceID, bookmarkName, approvalResult);
        }
        
        public System.Guid SubmitNewEForm(Aim.WorkFlow.WinService.ReceivedDocument eFormEntity, System.Guid workflowTemplateID) {
            return base.Channel.SubmitNewEForm(eFormEntity, workflowTemplateID);
        }
        
        public void UpdateEFormWorkflowTemplateBinding(System.Guid eformTemplateID, string[] boundWorkflowTemplateNames) {
            base.Channel.UpdateEFormWorkflowTemplateBinding(eformTemplateID, boundWorkflowTemplateNames);
        }
    }
}
